// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Studica.Students.Client.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// StudentExternalResponse
    /// </summary>
    /// <remarks>
    /// Model of the student.
    /// </remarks>
    public partial class StudentExternalResponse
    {
        /// <summary>
        /// Initializes a new instance of the StudentExternalResponse class.
        /// </summary>
        public StudentExternalResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StudentExternalResponse class.
        /// </summary>
        /// <param name="id">Student's identifier.</param>
        /// <param name="civilRegistrationNumber">Student's civil registration
        /// number.</param>
        /// <param name="givenName">Student's given name.</param>
        /// <param name="surname">Student's surname.</param>
        /// <param name="email">Student's e-mail address.</param>
        /// <param name="studyStartDate">Study date of start.</param>
        /// <param name="uniLoginUsername">Student's Unilogin username.</param>
        /// <param name="studyEndDate">Study date of end.</param>
        /// <param name="studyEndCause">Cause of study ending.</param>
        /// <param name="adUsername">Student's Active Directory
        /// username.</param>
        public StudentExternalResponse(System.Guid id, string civilRegistrationNumber, string givenName, string surname, string email, System.DateTime studyStartDate, string uniLoginUsername = default(string), System.DateTime? studyEndDate = default(System.DateTime?), string studyEndCause = default(string), string adUsername = default(string))
        {
            Id = id;
            CivilRegistrationNumber = civilRegistrationNumber;
            GivenName = givenName;
            Surname = surname;
            Email = email;
            UniLoginUsername = uniLoginUsername;
            StudyStartDate = studyStartDate;
            StudyEndDate = studyEndDate;
            StudyEndCause = studyEndCause;
            AdUsername = adUsername;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets student's identifier.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets student's civil registration number.
        /// </summary>
        [JsonProperty(PropertyName = "civilRegistrationNumber")]
        public string CivilRegistrationNumber { get; set; }

        /// <summary>
        /// Gets or sets student's given name.
        /// </summary>
        [JsonProperty(PropertyName = "givenName")]
        public string GivenName { get; set; }

        /// <summary>
        /// Gets or sets student's surname.
        /// </summary>
        [JsonProperty(PropertyName = "surname")]
        public string Surname { get; set; }

        /// <summary>
        /// Gets or sets student's e-mail address.
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// Gets or sets student's Unilogin username.
        /// </summary>
        [JsonProperty(PropertyName = "uniLoginUsername")]
        public string UniLoginUsername { get; set; }

        /// <summary>
        /// Gets or sets study date of start.
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "studyStartDate")]
        public System.DateTime StudyStartDate { get; set; }

        /// <summary>
        /// Gets or sets study date of end.
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "studyEndDate")]
        public System.DateTime? StudyEndDate { get; set; }

        /// <summary>
        /// Gets or sets cause of study ending.
        /// </summary>
        [JsonProperty(PropertyName = "studyEndCause")]
        public string StudyEndCause { get; set; }

        /// <summary>
        /// Gets or sets student's Active Directory username.
        /// </summary>
        [JsonProperty(PropertyName = "adUsername")]
        public string AdUsername { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CivilRegistrationNumber == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CivilRegistrationNumber");
            }
            if (GivenName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "GivenName");
            }
            if (Surname == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Surname");
            }
            if (Email == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Email");
            }
        }
    }
}
